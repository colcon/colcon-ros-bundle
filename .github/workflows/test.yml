name: Test colcon-ros-bundle
on:
  pull_request:
  # Runs every morning 08:43AM PST
  schedule:
    - cron: '43 17 * * *'

jobs:
  run_test_suite:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        deps_repo: [mainline, pypi]
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Configure AWS Credentials
      if: github.event_name == 'schedule'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Install testing dependencies
      run: |
        sudo apt update && sudo apt install -y enchant
        pip3 install -U setuptools==44.0.0
        pip3 install -r requirements_devel.txt
    - name: Install dependencies from mainline
      if: matrix.deps_repo == 'mainline'
      run: |
        pip3 install -U git+https://github.com/colcon/colcon-bundle git+https://github.com/ros-infrastructure/rosdep
    - name: Install dependencies from PyPi
      if: matrix.deps_repo == 'pypi'
      run: |
        pip3 install -U colcon-bundle rosdep
    - name: Run test
      run: python3 -m pytest --cov=colcon_ros_bundle --cov-branch

  log_workflow_status_to_cloudwatch:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
      - run_test_suite
    if: always()  # run even if the dependent jobs have failed to log failures
    # Allow build reports to fail on pull requests.
    # When a contribution is made on a fork, the secrets will not be available,
    # and this step will be failing. This is acceptable.
    # On the other end, we want to be notified if this happens on merge, or
    # on schedule.
    continue-on-error: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        # Checks if any of the jobs have failed.
        #
        # needs.*.result is returns the list of all success statuses as an
        # array, i.e. ['success', 'failure, 'success']
        # join() converts the array to a string 'successfailuresuccess'
        # contains() checks whether the string contains failure
        metric-value: ${{ ! contains(join(needs.*.result, ''), 'failure') && ! contains(join(needs.*.result, ''), 'cancelled') }}
